// Countdown Timer
function initCountdown() {
  const weddingDate = new Date("2025-10-11T10:00:00").getTime()

  function updateCountdown() {
    const now = new Date().getTime()
    const distance = weddingDate - now

    if (distance < 0) {
      document.getElementById("countdown").innerHTML =
        '<div class="countdown-item"><span class="countdown-number">🎉</span><span class="countdown-label">Casamos!</span></div>'
      return
    }

    const days = Math.floor(distance / (1000 * 60 * 60 * 24))
    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))
    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))
    const seconds = Math.floor((distance % (1000 * 60)) / 1000)

    document.getElementById("days").textContent = days
    document.getElementById("hours").textContent = hours
    document.getElementById("minutes").textContent = minutes
    document.getElementById("seconds").textContent = seconds
  }

  updateCountdown()
  setInterval(updateCountdown, 1000)
}

// Carousel Functionality
function initCarousel() {
  const slides = document.querySelectorAll(".carousel-slide")
  const prevBtn = document.getElementById("prevBtn")
  const nextBtn = document.getElementById("nextBtn")
  const dotsContainer = document.getElementById("carouselDots")

  let currentSlide = 0

  // Create dots
  slides.forEach((_, index) => {
    const dot = document.createElement("div")
    dot.classList.add("dot")
    if (index === 0) dot.classList.add("active")
    dot.addEventListener("click", () => goToSlide(index))
    dotsContainer.appendChild(dot)
  })

  const dots = document.querySelectorAll(".dot")

  function showSlide(index) {
    slides.forEach((slide) => slide.classList.remove("active"))
    dots.forEach((dot) => dot.classList.remove("active"))

    slides[index].classList.add("active")
    dots[index].classList.add("active")
  }

  function goToSlide(index) {
    currentSlide = index
    showSlide(currentSlide)
  }

  function nextSlide() {
    currentSlide = (currentSlide + 1) % slides.length
    showSlide(currentSlide)
  }

  function prevSlide() {
    currentSlide = (currentSlide - 1 + slides.length) % slides.length
    showSlide(currentSlide)
  }

  nextBtn.addEventListener("click", nextSlide)
  prevBtn.addEventListener("click", prevSlide)

  // Auto-advance carousel every 5 seconds
  setInterval(nextSlide, 5000)
}

// Message Form Functionality
function initMessageForm() {
  const form = document.getElementById("messageForm")
  const messagesList = document.getElementById("messagesList")

  // Load existing messages from localStorage
  loadMessages()

  form.addEventListener("submit", (e) => {
    e.preventDefault()

    const name = document.getElementById("name").value
    const email = document.getElementById("email").value
    const message = document.getElementById("message").value

    if (name && message) {
      const messageData = {
        id: Date.now(),
        name: name,
        email: email,
        message: message,
        date: new Date().toLocaleDateString("pt-BR"),
      }

      saveMessage(messageData)
      displayMessage(messageData)
      form.reset()

      // Show success message
      alert("Mensagem enviada com sucesso! Obrigado pelo carinho! ❤️")
    }
  })

  function saveMessage(messageData) {
    const messages = JSON.parse(localStorage.getItem("weddingMessages") || "[]")
    messages.unshift(messageData)
    localStorage.setItem("weddingMessages", JSON.stringify(messages))
  }

  function loadMessages() {
    const messages = JSON.parse(localStorage.getItem("weddingMessages") || "[]")
    messages.forEach((message) => displayMessage(message))
  }

  function displayMessage(messageData) {
    const messageElement = document.createElement("div")
    messageElement.classList.add("message-item")
    messageElement.innerHTML = `
      <div class="message-header">
        <span class="message-name">${messageData.name}</span>
        <span class="message-date">${messageData.date}</span>
      </div>
      <div class="message-text">${messageData.message}</div>
    `

    messagesList.insertBefore(messageElement, messagesList.firstChild)
  }
}

// Initialize all functionality when page loads
document.addEventListener("DOMContentLoaded", () => {
  initCountdown()
  initCarousel()
  initMessageForm()
})

//# sourceMappingURL=main.min.js.map
